Problem Statement
    
    Most of the time when rounding a given number, it is customary to round to some multiple of a 
    power of 10. However, there is no reason why we cannot use another multiple to do our rounding to. 
    For example, you could round to the nearest multiple of 7, or the nearest multiple of 3.
    Given an int n and an int b, round n to the nearest value which is a multiple of b. If n is exactly 
    halfway between two multiples of b, return the larger value.
    
    
5
10
Returns: 10

4
10
Returns: 0

100
3
Returns: 99
100 is closer to 99 than 102.

123456
7
Returns: 123459

49
7
Returns: 49


public class Rounder {
	public static int round(int n, int b) {
		double r = n % b;

		if (r == 0)
			return n;
		else if (r == b / 2.0)
			return b;
		else if (r < b / 2.0)
			return n - r > 0 ? (int) (n - r) : 0;
		else
			return (int) (n + b - r);
	}
}    
