Problem Statement
    
    Julius Caesar used a system of cryptography, now known as Caesar Cipher, which shifted each letter 
    2 places further through the alphabet (e.g. 'A' shifts to 'C', 'R' shifts to 'T', etc.). At the 
    end of the alphabet we wrap around, that is 'Y' shifts to 'A'.
    We can, of course, try shifting by any number. Given an encoded text and a number of places to 
    shift, decode it.
    For example, "TOPCODER" shifted by 2 places will be encoded as "VQREQFGT". In other words, if 
    given (quotes for clarity) "VQREQFGT" and 2 as input, you will return "TOPCODER". See example 0 
    below.
    
    
"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
10
Returns: "QRSTUVWXYZABCDEFGHIJKLMNOP"

"TOPCODER"
0
Returns: "TOPCODER"


public class CCipher {
	public static String decode(String cipherText, int shift) {
		StringBuilder sb = new StringBuilder();
		
		for (char c : cipherText.toCharArray()) {
			int val = c - shift;
			if (val < 65) {
				val = val + 26;
			}
			sb = sb.append((char)val);
		}
		
		return sb.toString();
	}
}
